/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOCHEBYCHEV3PDFV2
#define ROOCHEBYCHEV3PDFV2

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "RooListProxy.h"
#include "chebychev3f3.h"
#include "functions.h"

class RooChebychev3Pdf : public RooAbsPdf {
public:
  RooChebychev3Pdf() {} ; 
  RooChebychev3Pdf(const char *name, const char *title,
		    RooAbsReal& _costheta0,
		    RooAbsReal& _costheta1,
		    RooAbsReal& _costheta2,
		    RooArgList& _varlist);

  RooChebychev3Pdf(const RooChebychev3Pdf& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooChebychev3Pdf(*this,newname); }
  inline virtual ~RooChebychev3Pdf() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:
  Double_t evaluate() const ;

  RooRealProxy costheta0 ;
  RooRealProxy costheta1 ;
  RooRealProxy costheta2 ;
  RooListProxy varlist;

private:
  ClassDef(RooChebychev3Pdf,1) // Your description goes here...
};
 
#endif
